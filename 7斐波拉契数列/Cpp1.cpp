# include <stdio.h>

int main(void)
{
	int n;
	int f1, f2, fn;
	f1 = 1;
	f2 = 1;

	printf("你想知道第几个斐波拉契数：");
	scanf("%d", &n);

	if(n == 1)
	{
		fn = 1;
	}
	else if(n == 2)
	{
		fn = 1;
	}
	else if(n > 48)
	{
		printf("很抱歉，本程序只能求到第48个斐波拉契数!\n");
	}
	else
	{
		int i;
		for(i=3; i<=n; i++)
		{
			fn = f1 + f2;
			f1 = f2;
			f2 = fn;
		}
	}

	printf("%d\n", fn);

	return 0;
}


/*
斐波拉契数列：1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233，377，610，987，1597，2584，4181，6765，10946，17711，28657，46368........
规律：
fn = f(n-1) + f(n-2)
f(n-1) / fn ≈ 0.618  相邻两数的商越来越接近黄金比例0.618

毕达哥拉斯三元组：{3，4，5} {5，12，13}
规律：
任意连续四个斐波那契数，可以构造出一个毕达哥拉斯三元组
例如：1，1，2，3
外层2数乘积        ==》 3
中间两数相乘再乘2  ==》 4
中间两数平方和     ==》 5
*/